@page "/account"
@attribute [Authorize]
@attribute [StreamRendering]

<PageTitle>Аккаунт</PageTitle>
<SectionContent SectionName="SupstringSection">
    Аккаунт с персональной информацией
</SectionContent>
<div class="account">
    <div class="account__inner">
        <div class="account-avatar">
            <MudAvatar Style="height:364px; width:364px;">
                <MudImage Src="/images/avatar.jpg"></MudImage>
            </MudAvatar>
        </div>
        @if (_account != null)
        {
            <div class="account-info">
                <div class="account-info-primary">
                    <div class="account-info-primary__name">@_account.LastName @_account.FirstName @_account.MiddleName</div>
                </div>
                <div class="account-info-secondary">
                    <table class="account-info-secondary__table">
                        <thead>
                        <th></th>
                        <th></th>
                        </thead>
                        <tbody>
                            <tr class="account-info-secondary__table-row">
                                <td class="account-info-secondary__table-row__cell">Наименование университета:</td>
                                <td class="account-info-secondary__table-row__cell">@_account.NameUniversity</td>
                            </tr>
                            <tr class="account-info-secondary__table-row">
                                <td class="account-info-secondary__table-row__cell">Группа:</td>
                                <td class="account-info-secondary__table-row__cell">@_account.Group</td>
                            </tr>
                            <tr class="account-info-secondary__table-row">
                                <td class="account-info-secondary__table-row__cell">Специальность:</td>
                                <td class="account-info-secondary__table-row__cell">@_account.Major</td>
                            </tr>
                            <tr class="account-info-secondary__table-row">
                                <td class="account-info-secondary__table-row__cell">Электронный адрес:</td>
                                <td class="account-info-secondary__table-row__cell">@_account.Email</td>
                            </tr>
                            <tr class="account-info-secondary__table-row">
                                <td class="account-info-secondary__table-row__cell">Номер курса:</td>
                                <td class="account-info-secondary__table-row__cell">@_account.NumberCourse</td>
                            </tr>
                            <tr class="account-info-secondary__table-row">
                                <td class="account-info-secondary__table-row__cell">Принадлежность по роли в системе:</td>
                                <td class="account-info-secondary__table-row__cell">
                                    @{
                                        string role = string.Empty;
                                        switch (_account.Role)
                                        {
                                            case UserRoles.Student:
                                                role = "Студент";
                                                break;
                                            case UserRoles.Teacher:
                                                role = "Преподаватель";
                                                break;
                                            case UserRoles.Admin:
                                                role = "Администратор";
                                                break;
                                        }
                                        <span>@role</span>
                                    }
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        }

    </div>
</div>

@code {
    [CascadingParameter]
    public LayoutBase? Layout { get; set; }

    [Inject(Key = "ApiClientGuid")]
    private IApiClient<Guid> _apiCleint { get; init; } = null!;

    private UserDto<Guid>? _account = null!;

    protected override void OnInitialized()
    {
        if (Layout is not null)
            Layout.Links = new List<BreadcrumbItem>
            {
                new BreadcrumbItem("Домашняя страница", href: "/", disabled: false),
                new BreadcrumbItem("Аккаунт", href: "/account", disabled: true),
            };

    }

    protected override async Task OnInitializedAsync()
    {
        _account=await _apiCleint.UserApi.Get();
        await InvokeAsync(StateHasChanged);
    }


}
