@inject NavigationManager Navigation
@inject AuthService AuthService
@inject ISnackbar Snackbar
@inject TokenServerAuthenticationStateProvider AuthenticationStateProvider

<div class="header @(_isOpenList ? "header--open" : null)">
    <div class="header__inner">
        <div class="header-search">
            <input type="text" class="header-search__field" placeholder="Поиск участников системы..." @onblur="_ => _isOpenList=false" @onfocus="_ => _isOpenList=true" @oninput="GetRequestsAsync" />
            <img src="/icons/search.svg" alt="Поиск" class="header-search__icon" />
        </div>
        @if (_isOpenList)
        {
            <div class="header-list">
                <MudPaper>
                    @if(_users==null){

                    }
                    else
                    {
                        <MudList Clickable="true" Color="Color.Success">
                            @foreach(var user in _users){
                                <MudListItem AdornmentColor="Color.Success">@user.LastName @user.FirstName @user.MiddleName</MudListItem>
                                <MudDivider />
                            }
                        </MudList>
                    }

                </MudPaper>
            </div>
        }
        <div class="header-utility">
            <span class="vertical-red-line"></span>
            <div class="header-utility__writer" >
                <MudTooltip Text="Действия с аккаунтом">
                    <MudMenu AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopCenter">
                        <ActivatorContent>
                            <MudAvatar Color="Color.Info" Variant="Variant.Filled">
                                <MudIcon Color="Color.Secondary" Icon="@Icons.Material.Filled.Favorite" Size="Size.Large" />
                            </MudAvatar>
                        </ActivatorContent>
                        <ChildContent>
                            <MudMenuItem Href="/account">Профиль</MudMenuItem>
                            <MudMenuItem @onclick="Logout">Выйти из аккаунта</MudMenuItem>
                        </ChildContent>
                    </MudMenu>

                </MudTooltip>
            </div>
        </div>
    </div>
</div>

@code {
    [Inject(Key = "ApiClientGuid")]
    private IApiClient<Guid> _apiCleint { get; init; } = null!;

    private IReadOnlyCollection<UserDto<Guid>>? _users = null;
    private bool _isOpenList = false;

    protected override async Task OnInitializedAsync()
    {
        await GetRequestsAsync();
    }

    private async Task GetRequestsAsync()
    {
        var usersTemp = await _apiCleint.UserApi.GetAll();
        _users = usersTemp.Where(u => u.Role != UserRoles.Admin).ToList();
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Snackbar.Add("Выход из системы успешно выполнен!", Severity.Info);
        Navigation.NavigateTo("/authorize/login");

    }
}
