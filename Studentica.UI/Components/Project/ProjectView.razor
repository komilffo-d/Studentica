<div class="project-view">
    <div class="project-view__inner" @onclick="async() => await OnToDetailPage.InvokeAsync(Instance.Id)">
        <div class="project-view-header">
            <div class="project-view-header__inner">
                <div class="project-view-header__info">
                    <div class="project-view-header__info__title">@Instance.Name</div>
                    <div class="project-view-header__info__edit">
                        <MudIcon Icon="@Icons.Material.Outlined.Edit" Size="Size.Large" Color="Color.Default"></MudIcon>
                    </div>
                </div>
                <div class="project-view-header__state">
                    <ProjectStatus Status="StatusProject.OPEN"></ProjectStatus>
                </div>
            </div>
        </div>
        <div class="project-view-body">
            <div class="project-view-body__inner">
                @Instance.Description
            </div>
        </div>
        <div class="project-view-footer">
            <div class="project-view-footer__info">
                <div class="project-view-footer__info-time">
                    <div class="project-view-footer__info-time__icon">
                        <MudIcon Icon="@Icons.Material.Rounded.HourglassBottom" Color="Color.Error"></MudIcon>
                    </div>
                    <div class="project-view-footer__info-time__value">
                        @Instance.EndDate.ToString("d MMMM yyyy")
                    </div>
                </div>
                <div class="project-view-footer__info-avatars">

                    <MudAvatarGroup Max="5" Spacing="3" MaxColor="Color.Success">
                        <MudAvatar Color="RandomColorAvatar()" Variant="Variant.Filled">
                            @_account.FirstName.FirstOrDefault()
                        </MudAvatar>
                        @foreach (var member in Instance?.Members)
                        {
                            <MudAvatar Color="RandomColorAvatar()" Variant="Variant.Filled">
                                @member.FirstName.FirstOrDefault()
                            </MudAvatar>
                        }
                    </MudAvatarGroup>
                </div>
            </div>
            <div class="project-view-footer__issue">
                <div class="project-view-footer__issue__icon">
                    <MudIcon Icon="@Icons.Material.Rounded.FolderOpen"></MudIcon>
                </div>
                <div class="project-view-footer__issue__count">14 issues</div>
            </div>
        </div>
    </div>
</div>


@code{

    [Parameter]
    public ProjectDto<Guid> Instance { get; set; }

    [CascadingParameter(Name = "Account")]
    private UserDto<Guid> _account { get; set; } = null!;

    [Parameter]
    public EventCallback<Guid> OnToDetailPage {get;set;}

    [Parameter]
    public EventCallback<Guid> OnEdit { get; set; }

    private Color RandomColorAvatar()
    {
        int min = Enum.GetValues(typeof(Color)).Cast<int>().Min();
        int max = Enum.GetValues(typeof(Color)).Cast<int>().Max();
        Random random=new Random();
        var colorAvatar=(Color)random.Next(min, max);
        return colorAvatar;
    }
  

}